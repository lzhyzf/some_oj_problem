#include <iostream>
#include <cmath>
#include <stdlib.h>
#include <string>
#include <map>
#include <stack>
#include <queue>
#include <vector>
#include <algorithm>

using namespace std;

long long int gcd(long long int a, long long int b)
{//求最大公因数
	return b == 0 ? a : gcd(b, a % b);
}

long long int lcm(long long int a, long long int b)
{//求最小公倍数
	long long int c = gcd(a, b);
	return a / c * b;
}

int main()
{
	long long int n, sumnu = 0, sumde = 0, nu, de, intpart, fraction;
	cin >> n;
	for(int i = 0; i < n; i++){
		scanf("%lld/%lld", &nu, &de);
		if(sumnu == 0){//如果之前和为0，那么和变成现在读入的数
			sumnu = nu;
			sumde = de;
		}
		else{
			long long int c = lcm(sumde, de);//求出分母间最小公倍数并求和
			sumnu = c / sumde * sumnu + c / de * nu;
			sumde = c;
		}
	}
	intpart = sumnu / sumde;
	sumnu = abs(sumnu) - abs(intpart) * sumde;
	if(sumnu != 0){
		long long int c = gcd(sumnu, sumde);
		sumnu /= c;
		sumde /= c;
		if(intpart != 0)
			printf("%lld ", intpart);
		printf("%lld/%lld", sumnu, sumde);
	}
	else{
		if(intpart != 0)
			printf("%lld", intpart);
        else printf("0");
	}
	cin >> n;
	return 0;
}