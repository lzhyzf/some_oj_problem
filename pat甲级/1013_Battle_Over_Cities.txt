#include <cstdio>
#include <iostream>
#include <algorithm>

using namespace std;

int g[1005][1005];
bool visited[1005];

void dfs(int v, int n)
{
	for(int i = 1; i <= n; i++){
		if(visited[i] == false && g[v][i] == 1){
			visited[i] = true;
			dfs(i, n);
		}
	}
}

int main() {
	int n, m, k, c1, c2, area;
    scanf("%d %d %d", &n, &m, &k);
	for(int i = 0; i < m; i++){
		scanf("%d %d", &c1, &c2);
		g[c1][c2] = g[c2][c1] = 1;
	}
	for(int i = 0; i < k; i++){//外层k次循环
		fill(visited, visited + n + 1, false);
		scanf("%d", &area);
		visited[area] = true;
		int num = 0;
		for(int j = 1; j <= n; j++){//dfs遍历图
			if(visited[j] == false){
				num++;
				dfs(j, n);
			}
		}
		printf("%d\n", num - 1);
	}
	cin >> n;
    return 0;
}