#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <stack>
#include <cstring>
#include <algorithm>

using namespace std;

vector<vector<int> > v;
int level[100005], maxl = 0;

void xiangen(int root, int height)
{
	level[root] = height;
	if(v[root].size() != 0){
		for(int i = 0; i < v[root].size(); i++)
			xiangen(v[root][i], height + 1);
	}
	if(maxl < height) maxl = height;
}

int main() {
	int n, num = 0, temp, root;
	double p, r;
	cin >> n >> p >> r;
	v.resize(n);
	for(int i = 0; i < n; i++){
		scanf("%d", &temp);
		if(temp != -1)v[temp].push_back(i);
		else root = i;
	}
    xiangen(root, 0);
	for(int i = 0; i < n; i++)
		if(level[i] == maxl) num++;
	printf("%.2lf %d", p * pow(1+r/100, maxl), num);
	cin >> n;
	return 0;

}
